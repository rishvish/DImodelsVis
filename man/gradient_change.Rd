% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GradientChange.R
\name{gradient_change}
\alias{gradient_change}
\title{Visualise average response at each level of richness}
\usage{
gradient_change(
  model,
  gradient = c("richness", "evenness"),
  communities = c("original", "equi"),
  exp_str = list(),
  threshold = NULL,
  pie_colours = NULL,
  nrow = 0,
  ncol = 0
)
}
\arguments{
\item{model}{A Diversity Interactions model object fit by using the
\code{\link[DImodels:DI]{DI()}} function from the
\code{\link[DImodels:DImodels-package]{DImodels}} package.}

\item{gradient}{Diversity gradient to show on the X-axis, one of
"richness" or "evenness". Defaults to "richness".}

\item{communities}{Communities which are used to calculate the average
response. Accepts one of "original" or "equi".
"original" (the default) calculates the average using
the original communities from the raw data used to fit
the \code{\link[DImodels:DI]{DI}} model while "equi"
uses all possible equi-proportional communities at each
level of richness to calculate the average.}

\item{exp_str}{A list specifying values for additional experimental
structures in the model other than the proportions.
This would be useful to compare the predictions across
different values for a categorical variable. One plot will
be generated for each unique combination of values specified
here and they will be arranged in a grid according to the
value specified in `nrow` and `ncol`.}

\item{threshold}{For high levels of richness (>20) it might not be feasible
to compute and store all equi-proportional communities.
This parameter defines the number of communities randomly
selected at each level of richness.}

\item{pie_colours}{A character vector specifying the colours for the slices
within the pie-chart glyphs.}

\item{nrow}{Number of rows in which to arrange the final plot
(when `exp_str` is specified).}

\item{ncol}{Number of columns in which to arrange the final plot
(when `exp_str` is specified).}
}
\value{
A ggmultiplot (ggplot if single plot is returned) class object
}
\description{
Visualise average response at each level of richness
}
\examples{
## Load DImodels package to fit the model
library(DImodels)

## Load data
data(sim4)

## Fit DI model
mod <- DI(prop = 3:8, DImodel = 'AV', data = sim4, y = 'response')

## Create visualisation

## By default, 'richness' is the gradient and commmunities from the
## raw data are used to calcualte average response
gradient_change(model = mod)

## Can also calculate average response using all possible
## equi-proportional communities at each level of richness
gradient_change(model = mod, communities = 'equi')

## Can also plot across evenness
data(sim5)
mod1 <- DI(prop = paste0('p', 1:9), DImodel = 'AV',
          data = sim5, y = 'response', estimate_theta = TRUE)
gradient_change(model = mod1, gradient = 'evenness')
}
