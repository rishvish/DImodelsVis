% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ConditionalTernary.R
\name{conditional_ternary}
\alias{conditional_ternary}
\title{Conditional ternary diagrams}
\usage{
conditional_ternary(
  model,
  conditional = NULL,
  values = c(0.2, 0.5, 0.8),
  resolution = 3,
  nlevels = 7,
  colours = NULL,
  lower_lim = NULL,
  upper_lim = NULL,
  .contour_text = TRUE,
  .axis_guides = FALSE,
  axis_label_size = 4,
  vertex_label_size = 5
)
}
\arguments{
\item{model}{A Diversity Interactions model object fit by using the \code{\link[DImodels:DI]{DI()}} function from the \code{\link[DImodels:DImodels-package]{DImodels}} package.}

\item{conditional}{A character string describing the species to condition the ternary slices on.}

\item{values}{A vector of numbers between 0 and 1 describing the values at which to takes slices of the ternary}

\item{resolution}{A number between 1 and 5 describing the resolution of the resultant graph. A high value would result in a higher definition figure but at the cost of being computationlly expernsive.}

\item{nlevels}{The number of levels for the contour map}

\item{colours}{The colours for the contour map. The default colours scheme is the terrain.colors from hcl.pals()}

\item{lower_lim}{A number to set a custom lower limit for the contour. The default is minimum of the prediction}

\item{upper_lim}{A number to set a custom upper limit for the contour. The default is maximum of the prediction}

\item{.contour_text}{A boolean value indicating whether to include labels on the contour lines showing their values}

\item{.axis_guides}{A boolean value indicating whether to show axis guides in the ternary}

\item{axis_label_size}{A numeric value to adjust the size of the axis labels in the contour}

\item{vertex_label_size}{A numeric value to adjust the size of the vertex labels in the contour}
}
\value{
A ggplot object
}
\description{
Conditional ternary diagrams
}
\examples{
library(DImodels)
data(sim2)
m1 <- DI(y = "response", data = sim2, prop = 3:6, DImodel = "FULL")

conditional_ternary(m1, conditional = "p4", resolution = 1)

## Slices for experiments for over 4 species
data(sim4)
m2 <- DI(y = "response", prop = paste0("p", 1:6),
         DImodel = "AV", data = sim4)

conditional_ternary(m2, conditional = c("p4", "p5", "p6"),
                    resolution = 1)
}
