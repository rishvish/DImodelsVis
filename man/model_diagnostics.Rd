% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ModelDiagnostics.R
\name{model_diagnostics}
\alias{model_diagnostics}
\title{Regression diagnostics plots}
\usage{
model_diagnostics(
  model,
  which = c(1, 2, 3, 5),
  npoints = 3,
  cook.levels = c(0.5, 1),
  title = "Diagnostic Plots",
  nrow = 0,
  ncol = 0
)
}
\arguments{
\item{model}{A Diversity Interactions model object fit by using the \code{\link[DImodels:DI]{DI()}} function from the \code{\link[DImodels:DImodels-package]{DImodels}} package.}

\item{which}{a subset of the numbers 1 to 6, by default 1, 2, 3, and 5, referring to
1. - "Residuals vs Fitted", aka ‘Tukey-Anscombe’ plot
2. - "Normal Q-Q" plot, an enhanced qqnorm(resid(.))
3. - "Scale-Location"
4. - "Cook's distance"
5. - "Residuals vs Leverage"
6. - "Cook's dist vs Lev./(1-Lev.)"}

\item{npoints}{number of points to be labelled in each plot, starting with the most extreme.}

\item{cook.levels}{levels of Cook's distance at which to draw contours.}

\item{title}{Title for the plot}

\item{nrow}{Number of rows in which to arrange the final plot}

\item{ncol}{Number of columns in which to arrange the final plot}
}
\value{
A ggmultiplot class object
}
\description{
This function returns regression diagnostics plots for a Diversity Interactions (DI) model with points replaced by pie-chart glyphs making it easier to track various communities in the plots
}
\examples{
library(DImodels)

## Load data
data(sim1)

## Fit DI model
mod1 <- DI(y = "response", prop = 3:6, data = sim1, DImodel = "ADD")

## Get diagnostics plot
diagnostics <- model_diagnostics(mod1)
print(diagnostics)

## Get all plots
diagnostics <- model_diagnostics(mod1, which = 1:6)

## Access individual plots
print(diagnostics[[1]])
print(diagnostics[[6]])

## Change plot arrangement
model_diagnostics(mod1, which = c(1, 3), nrow = 2, ncol = 1)

## Modify contour levels for residual vs leverage plot
model_diagnostics(mod1, which = 5, cook.levels = c(0.02, 0.04, 0.06))

## Change number of extreme points to be flagged
model_diagnostics(mod1, which = 2, npoints = 5)
}
