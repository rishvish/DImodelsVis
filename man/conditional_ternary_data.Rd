% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ConditionalTernary.R
\name{conditional_ternary_data}
\alias{conditional_ternary_data}
\title{Conditional ternary diagrams}
\usage{
conditional_ternary_data(
  prop,
  conditional = NULL,
  values = c(0.2, 0.5, 0.8),
  exp_str = list(),
  resolution = 3,
  prediction = TRUE,
  ...
)
}
\arguments{
\item{prop}{A character vector indicating the model coefficients
corresponding to variable proportions.}

\item{conditional}{A character vector describing the variable(s) in the
direction of which to condition the high dimensional
simplex for taking the slices.}

\item{values}{A vector of numbers between 0 and 1 describing the values
at which to takes slices of the high dimensional simplex.}

\item{exp_str}{A list specifying values for additional experimental
structures in the model other than the proportions.
This would be useful to compare the predictions across
different values for a categorical variable.
One plot will be generated for each unique combination
of values specified here.}

\item{resolution}{A number between 1 and 5 describing the resolution of the
resultant graph.
A high value would result in a higher definition figure
but at the cost of being computationally expensive.}

\item{prediction}{A logical value indicating whether to pass the final data
to `\link{add_prediction}` and add predictions to the data.
Default value is \code{TRUE}, but often it would be
desirable to make additional changes to the data before
making any predictions, so the user can set this to
\code{FALSE} and manually call the `\link{add_prediction}`
function.}

\item{...}{
  Arguments passed on to \code{\link[=add_prediction]{add_prediction}}
  \describe{
    \item{\code{model}}{A regression model object which will be used to make predictions for the observations in `data`.
Will override `coefficients` if specified.}
    \item{\code{coefficients}}{If a regression model is not available (or can't be fit in R), the regression coefficients from a model fit in some other language can be used to calculate predictions.
However, the user would have to ensure there's an appropriate one-to-one positional mapping between the data columns and the coefficient values.
Further, it would not be possible to calculate confidence/prediction intervals using this method.}
    \item{\code{coeff_cols}}{If `coefficients` are specified and there isn't a one-to-one positional mapping between}
    \item{\code{conf.level}}{The confidence level for calculating confidence/prediction intervals. Default is 0.95.}
    \item{\code{interval}}{Type of interval to calculate:
\describe{
  \item{"none" (default)}{No interval to be calculated.}
  \item{"confidence"}{Calculate a confidence interval.}
  \item{"prediction"}{Calculate a prediction interval.}
}}
  }}
}
\value{
A data-frame containing compositional columns with names specified
        in `prop` parameter along with any additional columns specified in
        `exp_str` parameter and the following columns appended at the end.
 \describe{
   \item{.x}{The x-projection of the points within the ternary.}
   \item{.y}{The y-projection of the points within the ternary.}
   \item{.add_str_ID}{An identifier column for grouping the cartesian product
                      of all additional columns specified in `exp_str`
                      parameter (if `exp_str` is specified).}
   \item{.Sp}{An identifier column specifying the variable along which the
              high dimensional simplex is sliced.}
   \item{.Value}{The value (between 0 and 1) along the direction of variable
                 in `.Sp` at which the high dimensional simplex is sliced.}
   \item{.Facet}{An identifier column formed by combining `.Sp` and `.value`
                 to group observations within a specific slice of the
                 high dimensional simplex.}
   \item{.Pred}{The predicted response for each community.}
   \item{.Lower}{The lower limit of the prediction/confidence interval
                 for each observation.}
   \item{.Upper}{The upper limit of the prediction/confidence interval
                 for each observation.}
 }
}
\description{
The helper function for preparing the underlying data for creating conditional
ternary diagrams, where the high dimensional simplex is sliced at various
values along the range of a particular variable and we visualise the change
in the response with respect to the remaining three variables in a ternary
diagram where the proportions within the ternary would sum to 1 - x, where
x is the value of the conditioning variable at which the simplex is sliced.
}
\examples{
library(DImodels)

## Load data
data(sim2)

## Fit model
mod <- glm(response ~ 0 + (p1 + p2 + p3 + p4)^2, data = sim2)

## Create data
head(conditional_ternary_data(prop = c("p1", "p2", "p3", "p4"),
                              conditional = "p4",
                              model = mod,
                              resolution = 1))

## Can also add any additional experimental structures
head(conditional_ternary_data(prop = c("p1", "p2", "p3", "p4"),
                              conditional = "p4",
                              exp_str = list("block" = c("1", "2")),
                              model = mod,
                              resolution = 1))

## It could be desirable to take the output of this function and add
## additional variables to the data before making predictions
## Use `prediction = FALSE` to get data without any predictions
head(conditional_ternary_data(prop = c("p1", "p2", "p3", "p4"),
                              conditional = "p4",
                              prediction = FALSE,
                              resolution = 1))
}
