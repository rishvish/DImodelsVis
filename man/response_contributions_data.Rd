% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ResponseContributions.R
\name{response_contributions_data}
\alias{response_contributions_data}
\alias{response_contributions_plot}
\title{Splitting predicted response into contributions by
       individual model coefficients}
\usage{
response_contributions_data(
  data,
  model = NULL,
  coefficients = NULL,
  groups = list(),
  conf.level = 0.95,
  interval = "prediction"
)

response_contributions_plot(data, colours = NULL, se = FALSE)
}
\arguments{
\item{data}{A data-frame which is the output of the
`\link{response_contributions_data}` function, consisting of
the predicted response split into the contributions by the
different coefficients.}

\item{model}{A Diversity Interactions model object fit by using the
\code{\link[DImodels:DI]{DI()}} function from the
\code{\link[DImodels:DImodels-package]{DImodels}} package.}

\item{coefficients}{If a regression model is not available (or can't be fit in R), the regression coefficients from a model fit in some other language can be used to calculate predictions.
However, the user would have to ensure there's an appropriate one-to-one positional mapping between the data columns and the coefficient values.
Further, it would not be possible to calculate confidence/prediction intervals using this method.}

\item{groups}{A list specifying groupings to arrange coefficients into.
The coefficients within a group will be added together and
shown as a single entity on the plot. This could be useful for
grouping the species interactions into a single term for
better visibility.}

\item{conf.level}{The confidence level for calculating confidence or
prediction intervals.}

\item{interval}{Type of interval to calculate:
\describe{
  \item{"none" (default)}{No interval to be calculated.}
  \item{"confidence"}{Calculate a confidence interval.}
  \item{"prediction"}{Calculate a prediction interval.}
}}

\item{colours}{A character vector specifying the colours for the
contributions of the different coefficients.
If not specified, a default colour-scheme would be chosen,
however it could be uninformative and it is recommended to
manually choose contrasting colours for each coefficient
group to render a more useful plot.}

\item{se}{A logical value indicating whether to show prediction intervals
for predictions in the plot.}
}
\value{
A data-frame with the following columns
 \describe{
   \item{.Community}{An identifier column to discern each
                     observation in the data.}
   \item{.Pred}{The predicted repsonse for each observation.}
   \item{.Lower}{The lower limit of the prediction interval for
                 each observation.}
   \item{.Upper}{The lower limit of the prediction interval for
                 each observation.}
   \item{.Contributions}{An identifier describing the name of the
                         coefficient contributing to the response.}
   \item{.Value}{The contributed value of the respective coefficient/group
                 to the total prediction.}
 }

A ggplot object
}
\description{
The data preparation function for splitting the predicted response
from a regression model into contributions by the coefficients in the model.

The plotting function to visualise the predicted response from a
regression model as a stacked bar-chart showing the contributions
of each regression coefficient to the total predicted value. Requires
the output of the `\link{response_contributions_data}` as an input.
}
\examples{
library(DImodels)
library(dplyr)

## Load data
data(sim2)

## Fit model
mod <- glm(response ~ 0 + (p1 + p2 + p3 + p4)^2, data = sim2)

response_contributions_data(data = sim2[c(1,5,9,11), ],
                            model = mod)

## Specific coefficients can also be grouped together
## Either by their indices in the model coefficient vector
response_contributions_data(data = sim2[c(1,5,9,11), ],
                            model = mod,
                            groups = list("Interactions" = 5:10))
## Or by specifying the coefficient names as character strings
response_contributions_data(data = sim2[c(1,5,9,11), ],
                            model = mod,
                            groups = list("p1_Ints" = c("p1:p2",
                                                        "p1:p3",
                                                        "p1:p4")))

## Model coefficients can also be used, but then user would have
## to specify the data with all columns corresponding to each coefficient
coef_data <- sim2 \%>\%
               mutate(`p1:p2` = p1*p2, `p1:p3` = p1*p2, `p1:p4` = p1*p4,
                     `p2:p3` = p2*p3, `p2:p4` = p2*p4, `p3:p4` = p3*p4) \%>\%
               select(p1, p2, p3, p4,
                     `p1:p2`, `p1:p3`, `p1:p4`,
                     `p2:p3`, `p2:p4`, `p3:p4`) \%>\%
               slice(1,5,9,11)
print(coef_data)
print(mod$coefficients)
response_contributions_data(data = coef_data,
                            coefficients = mod$coefficients)
# Remember that it won't be possible to get prediction intervals
# when using the coefficients parameter
library(DImodels)
library(dplyr)

## Load data
data(sim2)

## Fit model
mod <- glm(response ~ 0 + (p1 + p2 + p3 + p4)^2, data = sim2)

## Create data for plotting
plot_data <- response_contributions_data(data = sim2[c(1,5,9,11,15,19,23), ],
                            model = mod)
## Create plot
response_contributions_plot(data = plot_data)

## Choose distinct colours for groups of coefficients
ID_cols <- get_colours(4)
int_cols <- get_shades("#808080", 6)[[1]]
cols <- c(ID_cols, int_cols)

response_contributions_plot(data = plot_data, colours = cols)

## Show prediction intervals
response_contributions_plot(data = plot_data, colours = cols, se = TRUE)
}
