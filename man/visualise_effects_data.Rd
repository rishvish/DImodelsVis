% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VisualiseEffects.R
\name{visualise_effects_data}
\alias{visualise_effects_data}
\title{Create data for visualising the effect of species loss or addition from a community.}
\usage{
visualise_effects_data(
  data,
  prop,
  species_interest = NULL,
  effect = c("addition", "loss"),
  prediction = TRUE,
  ...
)
}
\arguments{
\item{data}{A dataframe specifying the initial communities of interest for which
to visualise the effect of species loss or addition.
If a model object is specified then this data should contain all the
variables present in the model object including any experimental structures.
If a coefficient vector is specified then data should contain same number of
columns as the number of elements in the coefficient vector and a one-to-one
positional mapping would be assumed between the data columns and the
elements of the coefficient vector.}

\item{prop}{A vector of column names or indices identifying the columns containing the
species proportions in the data.}

\item{species_interest}{A character vector specifying the species for which to visualise
the effect of addition or loss on the response. If left blank,
all species would be assumed to be of interest.}

\item{effect}{A character string with one value from c("addition", "loss") whether to
visualise the effect of addition or loss of a species.}

\item{prediction}{A logical value indicating whether to pass the final data to
`\link{add_prediction}` and add predictions to the data.
Default value is \code{TRUE}, but often it would be desirable
to make additional changes to the data before making any
predictions, so the user can set this to \code{FALSE} and
manually call the `\link{add_prediction}` function.}

\item{...}{
  Arguments passed on to \code{\link[=add_prediction]{add_prediction}}
  \describe{
    \item{\code{model}}{A regression model object which will be used to make predictions for the observations in `data`.
Will override `coefficients` if specified.}
    \item{\code{coefficients}}{If a regression model is not available (or can't be fit in R), the regression coefficients from a model fit in some other language can be used to calculate predictions.
However, the user would have to ensure there's an appropriate one-to-one positional mapping between the data columns and the coefficient values.
Further, it would not be possible to calculate confidence/prediction intervals using this method.}
    \item{\code{coeff_cols}}{If `coefficients` are specified and there isn't a one-to-one positional mapping between}
    \item{\code{conf.level}}{The confidence level for calculating confidence/prediction intervals. Default is 0.95.}
    \item{\code{interval}}{Type of interval to calculate:
\describe{
  \item{"none" (default)}{No interval to be calculated.}
  \item{"confidence"}{Calculate a confidence interval.}
  \item{"prediction"}{Calculate a prediction interval.}
}}
  }}
}
\value{
A data frame with the following columns appended at the end
 \describe{
   \item{.Sp}{An identifier column to discern the species of interest being modified in each curve.}
   \item{.Proportion}{The value of the species of interest within the community.}
   \item{.Group}{An identifier column to discern between the different curves.}
   \item{.Pred}{The predicted response for each community.}
   \item{.Lower}{The lower limit of the prediction/confidence interval for each observation.}
   \item{.Upper}{The upper limit of the prediction/confidence interval for each observation.}
   \item{.Marginal}{The marginal change in the response (first derivative) with respect to the
                    gradual change in the proportion of the species of interest.}
   \item{.Threshold}{A numeric value indicating the maximum proportion of the species of interest
                     within a particular community which results in a positive marginal effect on the response.}
   \item{.MarEffect}{A character string entailing whether the addition/loss of the species of interest from the
                     particular community would result in a positive or negative marginal effect on the response.}
   \item{.Effect}{An identifier column signifying whether considering the effect of species addition or species loss.}
 }
}
\description{
The helper function to create the underlying data for visualising effects plots.
For each species community in data, several intermediary communities would be created between the initial
community and the monoculture of the species of interest (if looking at effect of species addition) or
between the original community and the community without the species of interest (if look at effect of species loss)
whilst maintaining the same ratio of the original species in the community.
The model object or coefficients vector would then be used to calculated the predicted response for each
intermediary community allowing us to visualise the effect of the addition/loss of the species of interest.
This function is particularly useful if the model object is not of class `\link[DImodels:DI]{DI()}` or only model
coefficients are available for prediction.
}
\examples{
library(DImodels)

## Load data
data(sim1)

## Fit model
mod <- glm(response ~ p1 + p2 + p3 + p4 + 0, data = sim1)

## Create data for visualising effect of adding species 1 to
## the original communities in the data
head(visualise_effects_data(data = sim1, prop = c("p1", "p2", "p3", "p4"),
                            species_interest = "p1", effect = "addition",
                            model = mod))

## Create data for visualising effect of losing species 2 from
## the original communities in the data but using model coefficients
## When specifying coefficients the data should have a one-to-one
## positional mapping with specified coefficients.
## Note that no confidence intervals can be generated when specifying
## model coefficients.
init_comms <- sim1[, c("p1", "p2", "p3", "p4")]
head(visualise_effects_data(data = init_comms, prop = 1:4,
                            species_interest = "p2",
                            effect = "loss",
                            coefficients = mod$coefficients))

## Can also create only the intermediary communities without predictions
## by specifying prediction = FALSE.
## Any additional columns can then be added and the `add_prediction` function
## can be manually called.
## Note: If calling the `add_prediction` function manually, the data would
## not contain information about the marginal effect of changing the species
## interest
effects_data <- visualise_effects_data(data = init_comms, prop = 1:4,
                                       species_interest = "p2",
                                       effect = "loss",
                                       prediction = FALSE)
head(effects_data)
head(add_prediction(data = effects_data, model = mod, interval = "prediction"))
head(add_prediction(data = effects_data, coefficients = mod$coefficients))
}
